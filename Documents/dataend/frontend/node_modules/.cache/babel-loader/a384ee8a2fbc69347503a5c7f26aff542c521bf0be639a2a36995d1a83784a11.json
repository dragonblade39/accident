{"ast":null,"code":"var _jsxFileName = \"/Users/chethannv/Documents/dataend/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.postData = async () => {\n      try {\n        // Get the user's current location\n        if (\"geolocation\" in navigator) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const {\n              latitude,\n              longitude\n            } = position.coords;\n            this.setState({\n              latitude,\n              longitude\n            });\n\n            // Make a POST request to your backend with the obtained location\n            this.sendLocationToServer(latitude, longitude);\n          }, error => {\n            console.error(`Error getting location: ${error.message}`);\n            this.setState({\n              error: error.message\n            });\n          });\n        } else {\n          console.error(\"Geolocation is not supported by this browser\");\n          this.setState({\n            error: \"Geolocation is not supported by this browser\"\n          });\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    this.sendLocationToServer = async (latitude, longitude) => {\n      try {\n        const response = await axios.post(\"http://localhost:5500/data/open-link\", {\n          latitude,\n          longitude\n        });\n        console.log(\"Response:\", response.data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    this.state = {\n      // Your state initialization here if needed\n      latitude: null,\n      longitude: null,\n      error: null\n    };\n    this.postData();\n  }\n  render() {\n    const {\n      latitude,\n      longitude,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [latitude && longitude && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", latitude, \", Longitude: \", longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","App","constructor","props","postData","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","setState","sendLocationToServer","error","console","message","response","post","log","data","state","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/chethannv/Documents/dataend/frontend/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Your state initialization here if needed\n      latitude: null,\n      longitude: null,\n      error: null,\n    };\n\n    this.postData();\n  }\n\n  postData = async () => {\n    try {\n      // Get the user's current location\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords;\n            this.setState({ latitude, longitude });\n\n            // Make a POST request to your backend with the obtained location\n            this.sendLocationToServer(latitude, longitude);\n          },\n          (error) => {\n            console.error(`Error getting location: ${error.message}`);\n            this.setState({ error: error.message });\n          }\n        );\n      } else {\n        console.error(\"Geolocation is not supported by this browser\");\n        this.setState({\n          error: \"Geolocation is not supported by this browser\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  sendLocationToServer = async (latitude, longitude) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:5500/data/open-link\",\n        { latitude, longitude }\n      );\n      console.log(\"Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  render() {\n    const { latitude, longitude, error } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* Display the obtained location or error message */}\n        {latitude && longitude && (\n          <p>\n            Latitude: {latitude}, Longitude: {longitude}\n          </p>\n        )}\n        {error && <p>Error: {error}</p>}\n        {/* Your component's UI here */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAC1BK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAYfC,QAAQ,GAAG,YAAY;MACrB,IAAI;QACF;QACA,IAAI,aAAa,IAAIC,SAAS,EAAE;UAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;YACZ,MAAM;cAAEC,QAAQ;cAAEC;YAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;YAC/C,IAAI,CAACC,QAAQ,CAAC;cAAEH,QAAQ;cAAEC;YAAU,CAAC,CAAC;;YAEtC;YACA,IAAI,CAACG,oBAAoB,CAACJ,QAAQ,EAAEC,SAAS,CAAC;UAChD,CAAC,EACAI,KAAK,IAAK;YACTC,OAAO,CAACD,KAAK,CAAE,2BAA0BA,KAAK,CAACE,OAAQ,EAAC,CAAC;YACzD,IAAI,CAACJ,QAAQ,CAAC;cAAEE,KAAK,EAAEA,KAAK,CAACE;YAAQ,CAAC,CAAC;UACzC,CACF,CAAC;QACH,CAAC,MAAM;UACLD,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAC;UAC7D,IAAI,CAACF,QAAQ,CAAC;YACZE,KAAK,EAAE;UACT,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAAA,KAEDD,oBAAoB,GAAG,OAAOJ,QAAQ,EAAEC,SAAS,KAAK;MACpD,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAC/B,sCAAsC,EACtC;UAAET,QAAQ;UAAEC;QAAU,CACxB,CAAC;QACDK,OAAO,CAACI,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACzC,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAhDC,IAAI,CAACO,KAAK,GAAG;MACX;MACAZ,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfI,KAAK,EAAE;IACT,CAAC;IAED,IAAI,CAACV,QAAQ,CAAC,CAAC;EACjB;EA0CAkB,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEb,QAAQ;MAAEC,SAAS;MAAEI;IAAM,CAAC,GAAG,IAAI,CAACO,KAAK;IAEjD,oBACErB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAC,QAAA,GAEjBf,QAAQ,IAAIC,SAAS,iBACpBV,OAAA;QAAAwB,QAAA,GAAG,YACS,EAACf,QAAQ,EAAC,eAAa,EAACC,SAAS;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACJ,EACAd,KAAK,iBAAId,OAAA;QAAAwB,QAAA,GAAG,SAAO,EAACV,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}